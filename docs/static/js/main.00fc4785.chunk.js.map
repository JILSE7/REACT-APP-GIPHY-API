{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/Spinner.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","console","log","type","placeholder","value","onChange","target","GifGridItem","title","url","src","alt","getGifs","categoria","a","encodeURI","fetch","json","data","gifs","map","gif","id","images","downsized_medium","Spinner","GifGrid","componente","loading","state","setState","useEffect","imgs","setTimeout","useFetchGifs","imagenes","image","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BCwCCQ,EA3CK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAICC,mBAAS,IAJV,mBAI5BC,EAJ4B,KAIhBC,EAJgB,KAuBnC,OAEI,sBAAMC,UAAU,SAAWC,SAhBV,SAACC,GAClBA,EAAEC,iBAGCL,EAAWM,OAAOC,OAAS,IAC1BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,IACdQ,QAAQC,IAAI,kBAShB,SACQ,uBACIC,KAAK,OACLC,YAAY,gBACZC,MAAQb,EACRc,SAxBU,SAACV,GAAD,OAAOH,EAAcG,EAAEW,OAAOF,a,QCQ7CG,EAhBK,SAAC,GAAe,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IAExB,OAEQ,sBAAKhB,UAAU,6CAAf,UACI,6BAAKe,IACL,qBAAKE,IAAMD,EAAKE,IAAKH,Q,uBCsBtBI,EA3BD,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEAIHL,EAJG,0FAIsFM,UAAUF,GAJhG,sBAKmBG,MAAMP,GALzB,8BAK+BQ,OAL/B,uBAKFC,EALE,EAKFA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAIxB,MAAM,CACFC,GAJgBD,EAAbC,GAKHd,MALgBa,EAATb,MAMPC,KAPoB,UAEVY,EAAIE,cAFM,aAEV,EAAYC,kBAAnBf,QATF,kBAmBFU,GAnBE,kCAsBTnB,QAAQC,IAAR,MAtBS,0DAAH,sDCmBCwB,G,MAlBC,WAIZ,OAEI,sBAAKhC,UAAU,WAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,sBC4BZiC,EArCC,SAAC,GAAe,IAKxBC,EALUd,EAAa,EAAbA,UAAa,ECHH,SAACA,GAAe,IAAD,EAEbvB,mBAAS,CAC/B4B,KAAM,GACNU,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAqBvC,OAdAC,qBAAU,WACNnB,EAAQC,GACH/B,MAAK,SAAAkD,GAEFC,YAAW,WACPH,EAAS,CACLZ,KAAMc,EACNJ,SAAS,MAEd,UAGZ,CAACf,IACJb,QAAQC,IAAI4B,GACLA,EDf2BK,CAAarB,GAAlCsB,EAHc,EAGpBjB,KAQP,OAX2B,EAGJU,UAIvBD,EAAa,cAAC,EAAD,KAKT,qCACI,6BAAKd,IAEJc,EAGD,qBAAKlC,UAAU,QAAf,SACK0C,EAASf,KAAI,SAAAgB,GAAK,OAAG,cAAC,EAAD,eAAkCA,GAAdA,EAAMd,aEajDe,EAjCM,WAAM,IAAD,EAIc/C,mBAAS,CAAC,cAJxB,mBAIfgD,EAJe,KAIHjD,EAJG,KAgBtB,OACI,qCACI,sBAAKI,UAAU,SAAf,UACI,8CACA,cAAC,EAAD,CAAaJ,cAAgBA,OAEjC,uBACJ,6BACKiD,EAAWlB,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAA0BA,UAAYA,GAAvBA,YCpB3B0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.00fc4785.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories})=>{\r\n\r\n\r\n    //State\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n            console.log('Submit hecho');\r\n        }\r\n     \r\n    }\r\n\r\n    \r\n\r\n    return(\r\n\r\n        <form className=\"header\"   onSubmit= {handleSubmit}> \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Busca un gift\" \r\n                    value= {inputValue}\r\n                    onChange= {handleInputChange}\r\n                  \r\n                \r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ({title,url})=>{\r\n\r\n    return(\r\n\r\n            <div className='card animate__animated animate__bounceInUp'>\r\n                <h4>{title}</h4>\r\n                <img src= {url} alt={title}/>\r\n            </div>\r\n   \r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default GifGridItem","\r\n\r\n\r\n const getGifs = async(categoria)=>{\r\n\r\n    try {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=ATPfkfhaLp9yPC0iPbss4sbZ1CJ8hzkp&q=${encodeURI(categoria)}&limit=20`\r\n        const {data} = await (await fetch(url)).json()\r\n\r\n        const gifs = data.map(gif =>{\r\n            const {id, title} = gif;\r\n            const {url} = gif.images?.downsized_medium;\r\n\r\n            return{\r\n                id,\r\n                title,\r\n                url\r\n            }\r\n        })\r\n\r\n\r\n        return gifs;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport default getGifs;","import React from 'react'; \r\n\r\n\r\nimport './Spinner.css'\r\nconst Spinner = () =>{\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport Spinner from './Spinner'\r\n// import getGifs from '../helpers/getGifs';\r\n\r\nconst GifGrid = ({categoria})=>{\r\n\r\n    \r\n    const {data: imagenes, loading} = useFetchGifs(categoria);\r\n\r\n    let componente;\r\n    if(loading){\r\n    componente = <Spinner/>    \r\n    }\r\n    \r\n\r\n    return(\r\n        <>\r\n            <h3>{categoria}</h3>\r\n\r\n            {componente}\r\n           \r\n    \r\n            <div className=\"cards\">\r\n                {imagenes.map(image =><GifGridItem  key= {image.id} {...image}/>)}\r\n            </div>\r\n \r\n        \r\n        </>\r\n\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nGifGrid.propTypes = {\r\n    categoria: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\n\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(categoria)\r\n            .then(imgs =>{\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });    \r\n                }, 1000);\r\n                \r\n            })\r\n    }, [categoria])\r\n    console.log(state);\r\n    return state // {data:[], loading: true}\r\n    \r\n\r\n}","import React, { useState } from 'react';\r\n\r\n//Importando AddCategory\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n  \r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = ()=>{\r\n    //     //opcion con spread opreator\r\n    //     // setCategories([...categories, 'Hook']);\r\n\r\n    //     //2da opcion\r\n    //     setCategories(categories => [...categories, 'Hook'])\r\n    // }\r\n\r\n\r\n\r\n    return(\r\n        <>  \r\n            <div className=\"header\">\r\n                <h1>GifExpertApp</h1>\r\n                <AddCategory setCategories= {setCategories}/>\r\n            </div>\r\n            <hr />\r\n        <ol>\r\n            {categories.map((categoria) => \r\n            <GifGrid key= {categoria} categoria= {categoria}/>\r\n            )}\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css'\n\n//IMportando componentes Gif\nimport GifExpertApp  from './components/GifExpertApp'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}